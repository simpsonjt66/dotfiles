#!/usr/bin/env ruby

# frozen_string_literal: true

require 'open3'

# Version 0.1
# September 2021
#
# A small group of command line utilites to update the aur files contained in
# the ~/Code/ directory.  It started out as what seemed to be a fairly
# straightforward little command line app and gradually grew as I started to
# discover multi threaded and Open3, so it quickly evolved to a competely
# different animal.  The current plan is to complete the development of it,
# then I think create a Gem where the code is slightly more organized, followed
# by trying to port this over to maybe a node app, then a rust app.
module Threaded
  Aur = Struct.new(:name, :git_url, :remote_reachable, :up_to_date)
  GitMessage = Struct.new(:output, :error, :status)

  def self.escape(string)
    string && string.to_s.gsub('\'', '\'"\'"\'').to_s
  end

  def self.status(dir, command)
    opts = []
    opts << "--git-dir=#{dir}/.git"
    opts << "--work-tree=#{dir}"
    opts = opts.flatten.map { |s| escape(s) }.join(' ')

    stdout, stderr, status =
      Open3.capture3("git #{opts} #{command}")
    GitMessage.new(stdout.chomp, stderr, status)
  end

  def self.up_to_date?
    "rev-list --right-only --count HEAD...@'{u}'"
  end

  def self.git_remote
    'remote get-url origin'
  end

  def self.remote_reachable?
    'ls-remote --exit-code'
  end

  def self.run
    threads = []
    packages = Dir['*/PKGBUILD'].map { |pkg| pkg.gsub('/PKGBUILD', '') }.map { |x| [x, Aur.new] }.to_h

    packages.each_key do |pkg|
      threads << Thread.new do
        packages[pkg].name = pkg
        packages[pkg].up_to_date = status(pkg, up_to_date?).output.to_i.zero?
        packages[pkg].git_url = status(pkg, git_remote).output
        packages[pkg].remote_reachable = status(pkg, remote_reachable?).status.success?
      end
      threads.each(&:join)
    end
    puts packages
  end
end

Threaded.run

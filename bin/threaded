#!/usr/bin/env ruby

# frozen_string_literal: true

# Version 0.1
# September 2021
#
# A small group of command line utilites to update the aur files contained in
# the ~/Code/ directory.  It started out as what seemed to be a fairly
# straightforward little command line app and gradually grew as I started to
# discover multi threaded and Open3, so it quickly evolved to a competely
# different animal.  The current plan is to complete the development of it,
# then I think create a Gem where the code is slightly more organized, followed
# by trying to port this over to maybe a node app, then a rust app.

require 'open3'

Aur = Struct.new(:name, :git_url, :remote_reachable, :up_to_date)
GitMessage = Struct.new(:output, :error, :status)

def escape(string)
  string && string.to_s.gsub('\'', '\'"\'"\'').to_s
end

def status(dir, command)
  opts = []
  opts << "--git-dir=#{dir}/.git"
  opts << "--work-tree=#{dir}"
  opts = opts.flatten.map { |s| escape(s) }.join(' ')

  stdout, stderr, status =
    Open3.capture3("git #{opts} #{command}")
  GitMessage.new(stdout, stderr, status)
end

threads = []
packages = Dir['*/PKGBUILD'].map { |pkg| pkg.gsub('/PKGBUILD', '') }.map { |x| [x, Aur.new] }.to_h

packages.each_key do |pkg|
  threads << Thread.new do
    packages[pkg].name = pkg
    packages[pkg].up_to_date = true if status(pkg, 'status -uno').output.include? 'Your branch is up to date'
    packages[pkg].git_url = status(pkg, 'remote get-url origin').output.chomp
    packages[pkg].remote_reachable = status(pkg, 'ls-remote --exit-code').status.success?
  end
end

threads.each(&:join)
puts packages
